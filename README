Novell Snoek 11/Feb/2011 
------------------------

Contacts:
---------
    yfjiang
    ysun
    sqiu
AaaT novell DOT com (to avoid spam spread, please pronounce them and translate.)

Simple development guide
------------------------

* If you want to push the increnmental change of snoek, please send your public 
ssh key to any of the authors.

0a. git clone ssh://git@147.2.207.136/~/snoek.git

[or]

0b. git clone http://147.2.207.136/repo/snoek.git

1. You need dependencies to run Snoek:
   - python 2.6 +
   
   - Django site pack for python

   - odfpy site pack for python

   They are in dep directory of git repo as well.

2. You probably do not want to patch settings.py and db.sqlite, this is the way to do it after 'git pull':

        snoek/$ git update-index --assume-unchanged settings.py

        snoek/$ git update-index --assume-unchanged db.sqlite
   
   In case you meet a problem when meeting pull problem, the reversing operation is:

        snoek/$ git update-index --no-assume-unchanged settings.py

        snoek/$ git update-index --no-assume-unchanged db.sqlite

   In normal case you won't use the above 2 lines since the change db.sqlite and setting are set not tracked 
   on git server.

3. edit settings.py for your own testing environment (replace all PATH info to your own snoek location), 
for example, if you change the database to point to another one:

       snoek/$ cp db.sqlite db
       
       change DATABASE_NAME = '/home/qateam/snoek/db.sqlite' => DATABASE_NAME = '$YOUR_SNOEK_HOME/db' 

4. Run testing server

   snoek/$ python manage.py runserver localhost:8080

5. The typical command of push your code to repo is:
   
   - You did some nice work of code improvement
   
   - snoek/$ git commit -a -m 'your tips goes here'

   - snoek/$ git pull -r

   - snoek/$ git push

6. If you are interested but do not have a ssh permission, please send a patch to any of the author via:

[quote from libreoffice community]
    *  create the patch file that you want to mail. 
       If you are in one repository you can use git 
       directly to get e.g. the last change in your 
       branch as a diff file with: 

       git format-patch HEAD~1
