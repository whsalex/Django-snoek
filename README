Novell Snoek 11/Feb/2011 ------------------------

Contacts: --------- yfjiang ysun sqiu AaaT suse DOT com (to avoid spam
spread, please pronounce them and translate.)

Usage -----

        1. Login the web site and click an activity you are interested in

        2. Attend the vote by clicking Take Vote section

                - You could only have one chance of voting at the moment

                - You will not be able to vote for an activity if it is
                  outdated

        3. The statistics of votings are shown in the section Voting
        Results

                - If only one vote is in the activity, there will be only
                  one table to describe the results

                - If multiple votes are created in the activity, multiple
                  tables would be generated to describe:

                        a. 1 dimension data for each votes

                        b. 2 dimension data for for possible combinations
                        of any two of the votes

                - All voters' favourite choice can be found by clicking
                  'Who vote what' link

        4. The ODF format of voting results can be downloaded by click
        'Download me'

        5. You may change your password by clicking the tiny icon beside
        the user name


Simple development guide ------------------------

* If you want to push the increnmental change of snoek, please send your
public ssh key to any of the contacts.

0a. git clone ssh://git@147.2.207.136/~/snoek.git

[or]

0b. git clone http://147.2.207.136/repo/snoek.git

1. You need dependencies to run Snoek:

    - Python 2.6 +
   
    - Django for python

    - odfpy for python
    
    - A static http server (apache, lighttp, etc.)    

    The Django and odfpy packs are put in the "dep" directory.

2. Link the static content (css, image) to the root of your http server.

        snoek/$ sudo ln -s $(readlink -f ./templates/css) $your_static_http_root
        snoek/$ sudo ln -s $(readlink -f ./templates/image) $your_static_http_root
        snoek/$ sudo ln -s $(readlink -f ./templates/jquery) $your_static_http_root

    The following is a substantial example of my development
    environment. My static http root is in /srv/www/htdoc

        $ find /srv/www/htdocs/ -maxdepth 1 -type l | xargs ls -l
        lrwxrwxrwx 1 root root 40 2011-09-26 10:58 /srv/www/htdocs/css -> /home/yifan/project/snoek/templates/css/
        lrwxrwxrwx 1 root root 41 2011-09-26 10:45 /srv/www/htdocs/image -> /home/yifan/project/snoek/templates/image
        lrwxrwxrwx 1 root root 43 2011-09-29 18:16 /srv/www/htdocs/jquery -> /home/yifan/project/snoek/templates/jquery/

3. You probably do not want to patch settings.py and db.sqlite, this is the
way to do it after 'git pull':

        snoek/$ git update-index --assume-unchanged settings.py

        snoek/$ git update-index --assume-unchanged db.sqlite
   
   In case you meet a problem when meeting pull problem (the files are
   modified on git server for example), the reversing operation is:

        snoek/$ git update-index --no-assume-unchanged settings.py

        snoek/$ git update-index --no-assume-unchanged db.sqlite

   The typical scenario after the no-assume-changed is

        a. copy your own copy out to somewhere safe

        b. pull the latest version of settings.py or db.sqlite

        c. copy back your own copy, and merge your own work if necessary

        d. finally --assume-unchanged again to the files

4. edit settings.py for your own testing environment. Usually you only need
to modify the MEDIA_URL value:

       MEDIA_URL = 'http://localhost'

make it point to your static server's root URL. This makes the css, image,
jquery canbe imported to Snoek.

5. Run testing server

   snoek/$ python manage.py runserver localhost:8080

6. The typical command of push your code to repo is:
   
   - You did some nice work of code improvement
   
   - snoek/$ git commit -a -m 'your tips goes here'

   - snoek/$ git pull -r

   - snoek/$ git push

7. If you are interested but do not have a ssh permission, please send a
patch to any of the contacts via:

    [quote from libreoffice community]
    * create the patch file that you want to mail.  If you are in one
    repository you can use git directly to get e.g. the last change in your
    branch as a diff file with:

           git format-patch HEAD~1
